apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'

def ossrhUsername = hasProperty('ossrhUsername') ? ossrhUsername : ""
def ossrhPassword = hasProperty('ossrhPassword') ? ossrhPassword : ""

project.group = 'com.velocidi'

project.ext.name = 'Velocidi-SDK'
project.ext.artifactId = "velocidi-android-sdk"
project.ext.description = 'Velocidi Android SDK'
project.ext.url = 'https://github.com/velocidi/velocidi-android-sdk'
project.version = version

android {
  publishing {
    singleVariant('release') {
        withSourcesJar()
    }
  }
}

publishing {
    publications {
        release(MavenPublication) {
            artifactId project.ext.artifactId
            groupId project.group
            version project.version

            afterEvaluate {
              from components.release
            }

            pom {
                name = project.ext.name
                packaging = 'aar'
                description = project.ext.description
                url = project.ext.url

                scm {
                    connection = 'scm:git@github.com:velocidi/velocidi-android-sdk.git'
                    developerConnection = 'scm:git@github.com:velocidi/velocidi-android-sdk.git'
                    url = 'https://github.com/velocidi/velocidi-android-sdk'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'velocidi'
                        name = 'Velocidi'
                        email = 'engineering@velocidi.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }

    }
}

signing {
    sign publishing.publications
}

release {
    failOnCommitNeeded = false
    failOnPublishNeeded = false
    preTagCommitMessage = "Set version to"
    tagCommitMessage = "Set tag to"
    newVersionCommitMessage = "Set version to"

    git {
        signTag.set(true)
        requireBranch.set('master')
        pushToRemote.set('')
    }
}

afterReleaseBuild.dependsOn publish
